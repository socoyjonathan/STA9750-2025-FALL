---
title: "STA 9750 Mini-Project #01: Gourmet Cheeseburgers Across the Globe: Exploring the Most Popular Programming on Netflix"
author: "Jonathan Sucuc Socoy"
code-fold: true
format:
  html:
    theme: flatly
---

# Acquire Data
Let's download the data files and load the TSV files on tables.
```{r echo=TRUE, results='hide', message='hide'}
if (!require("tidyverse")) install.packages("tidyverse")
if (!require("DT")) install.packages("DT")
library(ggplot2)
library(readr)
library(dplyr)
library(stringr)
library(DT)

if(!dir.exists(file.path("data", "mp01"))){
  dir.create(file.path("data", "mp01"), showWarnings=FALSE, recursive=TRUE)
}

GLOBAL_TOP_10_FILENAME <- file.path("data", "mp01", "global_top10_alltime.csv")

if(!file.exists(GLOBAL_TOP_10_FILENAME)){
  download.file("https://www.netflix.com/tudum/top10/data/all-weeks-global.tsv", 
                destfile=GLOBAL_TOP_10_FILENAME)
}

COUNTRY_TOP_10_FILENAME <- file.path("data", "mp01", "country_top10_alltime.csv")

if(!file.exists(COUNTRY_TOP_10_FILENAME)){
  download.file("https://www.netflix.com/tudum/top10/data/all-weeks-countries.tsv", 
                destfile=COUNTRY_TOP_10_FILENAME)
}

GLOBAL_TOP_10 <- read_tsv("~/Desktop/Baruch College/STAT 9750 FALL 2025/STA9750-2025-FALL/data/mp01/global_top10_alltime.csv")

GLOBAL_TOP_10 <- GLOBAL_TOP_10 |>
  mutate(season_title = if_else(season_title == "N/A", NA, season_title))

COUNTRY_TOP_10 <- read_tsv("~/Desktop/Baruch College/STAT 9750 FALL 2025/STA9750-2025-FALL/data/mp01/country_top10_alltime.csv")

```

# Data Import and Preparation

Let's clean and prepare the data on tables:

## Global Top 10 Data:
```{r echo=FALSE}
format_titles <- function(df) {
  colnames(df) <- str_replace_all(colnames(df), "_", " ") |> str_to_title()
  df
}

GLOBAL_TOP_10 |>
  mutate(`runtime_(minutes)` = round(60 * runtime)) |>
  select(
    -season_title,
    -runtime
  ) |>
  format_titles() |>
  head(n = 10) |>  
  datatable(options = list(searching = FALSE, info = FALSE)) |>
  formatRound(c("Weekly Hours Viewed", "Weekly Views"))
```


## Countries Top 10 Data:

```{r echo=FALSE}
COUNTRY_TOP_10 |>
  select(-season_title) |>
  format_titles() |>
  head(n = 10) |>
  datatable(options = list(searching = FALSE, info = FALSE)) |>
  formatRound(c("Cumulative Weeks In Top 10"))
      
```


# Initial Data Exploration

Let's now conduct an exploratory data analysis: 


1. How many different countries does Netflix operate in? (You can use the viewing history as a proxy for countries in which Netflix operates.)

```{r echo=TRUE, results='hide'}
distinct_countries <- n_distinct(COUNTRY_TOP_10$country_name)
distinct_countries
```

> Netflix operates in **`r distinct_countries`** different countries


2. Which non-English-language film has spent the most cumulative weeks in the global top 10? How many weeks did it spend?

```{r echo=TRUE, results='hide'}
top_non_English_film <- GLOBAL_TOP_10 |>
  filter(category == "Films (Non-English)") |>
  group_by(show_title) |>
  summarize(top_cumulative_weeks_in_top_10 = max(cumulative_weeks_in_top_10)) |>
  arrange(desc(top_cumulative_weeks_in_top_10)) |>
  slice_max(order_by = top_cumulative_weeks_in_top_10, n = 1, with_ties = TRUE)

top_non_English_film
```

>  **`r top_non_English_film$show_title`** is the non-English-language film that has spent the most cumulative weeks in the global top 10 with **`r top_non_English_film$top_cumulative_weeks_in_top_10`** weeks. 


3. What is the longest film (English or non-English) to have ever appeared in the Netflix global Top 10? How long is it in minutes? Note that Netflix does not provide runtime for programs before a certain date, so your answer here may be a bit limited.

```{r echo=TRUE, results='hide'}
#| warning: false
longest_film <- GLOBAL_TOP_10 |>
  filter(category %in% c("Films (Non-English)", "Films (English)")) |>
  group_by(show_title) |>
  summarize(max_runtime = max(runtime, na.rm = TRUE)) |>
  slice_max(order_by = max_runtime, n = 1, with_ties = TRUE) |>
  ungroup() |>
  arrange(desc(max_runtime)) |>
  mutate(runtime_minutes = round(60 * as.numeric(max_runtime)))

longest_film
```

> **`r longest_film$show_title`** is the longest film to have ever appeared in the Netflix global Top 10. It is **`r longest_film$runtime_minutes`** minutes long


4. For each of the four categories, what program has the most total hours of global viewership?

```{r echo=TRUE, results='hide'}
program_with_most_global_hours_per_category <- GLOBAL_TOP_10 |>
  group_by(category) |>
  filter(weekly_hours_viewed == max(weekly_hours_viewed, na.rm = TRUE)) |>
  select(category, show_title, weekly_hours_viewed) |>
  format_titles() |>
  datatable(options = list(paging = FALSE, searching = FALSE, info = FALSE, lengthChange = FALSE ),
          class = 'cell-border stripe hover order-column') 

program_with_most_global_hours_per_category 
```
> For each category, the program has the most total hours of global viewership are **`r program_with_most_global_hours_per_category`**


5. Which TV show had the longest run in a country’s Top 10? How long was this run and in what country did it occur?

```{r echo=TRUE, results='hide'}
longest_TV_run_country <- COUNTRY_TOP_10 |>
  filter(category %in% "TV") |> # check if film ) |>
  group_by(country_name) |>
  filter(cumulative_weeks_in_top_10 == max(cumulative_weeks_in_top_10, na.rm = TRUE)) |>
  ungroup() |>
  filter(cumulative_weeks_in_top_10 == max(cumulative_weeks_in_top_10))

longest_TV_run_country
```

> **`r longest_TV_run_country$show_title`** has the longest run in a country’s Top 10 with a run of **`r longest_TV_run_country$cumulative_weeks_in_top_10`** consecutive weeks in **`r longest_TV_run_country$country_name`**.


6. Netflix provides over 200 weeks of service history for all but one country in our data set. Which country is this and when did Netflix cease operations in that country?

```{r echo=TRUE, results='hide'}
ceased_service_country <- COUNTRY_TOP_10 |>
  group_by(country_name) |>
  filter((max(week) - min(week)) < (200 * 7)) |>
  ungroup()

country_ceased_service <- unique(ceased_service_country$country_name)
week_ceased_service <- max(ceased_service_country$week)

country_ceased_service
week_ceased_service 
```

> Netflix no longer provides services in **`r country_ceased_service`**. It ceased to provide services in **`r year(week_ceased_service)`** and specifically after **`r week_ceased_service`**.

7. What is the total viewership of the TV show Squid Game? Note that there are three seasons total and we are looking for the total number of hours watched across all seasons.

```{r echo=TRUE, results='hide'}
squid_game_data <- GLOBAL_TOP_10 |>
  filter(show_title == "Squid Game") |>
  select(-week, -runtime, -cumulative_weeks_in_top_10, -weekly_views, -category, -weekly_rank, -show_title) |>
  group_by(season_title) |>
  summarize(season_viewership = sum(weekly_hours_viewed)) |>
  summarize(total_viewership = sum(season_viewership))

squid_game_data
```
> The total viewership of the TV show Squid Game across all seasons is **`r prettyNum(squid_game_data, big.mark = ",", scientific = FALSE)`** views.

8. The movie Red Notice has a runtime of 1 hour and 58 minutes. Approximately how many views did it receive in 2021? Hint: The year() function from the lubridate package may be helpful.

```{r echo=TRUE, results='hide'}
red_notice_hours_viewed <- GLOBAL_TOP_10 |>
  filter(show_title == "Red Notice") |> # movie selection
  filter(year(week) == 2021) |>
  summarize(views_2021 = sum(weekly_hours_viewed))

red_notice_hours_viewed 
```
> Red Notice had **`r prettyNum(red_notice_hours_viewed, big.mark = ",", scientific = FALSE)`** views in 2021, captured as a function of cumulative weekly hours viewed since there were no actual recorded views.

9. How many Films reached Number 1 in the US but did not originally debut there? That is, find films that first appeared on the Top 10 chart at, e.g., Number 4 but then became more popular and eventually hit Number 1? What is the most recent film to pull this off? Hint: You will want to create a new variable to identify films that topped the charts at any point during their run.


```{r echo=TRUE, results='hide'}
top_films_reached_1_but_not_debuted <- COUNTRY_TOP_10 |>
  filter(category %in% "Films" & country_name == "United States") |> # check if film
  group_by(show_title) |> # group by shows
  summarize(
    min_rank = min(weekly_rank), # min of ranks,
    min_rank_week = week[min_rank], # week of minimum rank 
    first_week_rank = weekly_rank[which.min(week)], # rank of first debut week
    first_week = min(week) # first debut week
  ) |> 
  filter(first_week_rank != min_rank & min_rank == 1) |> # see if rank in first week == min of ranks
  ungroup()

top_films_reached_1_but_not_debuted

```

> **`r nrow(distinct(top_films_reached_1_but_not_debuted))`** films reached Number 1 in the US but did not originally debut there. 

> The most recent film to first appear on the Top 10 chart but not Number 1 is **`r top_films_reached_1_but_not_debuted$show_title[which.max(top_films_reached_1_but_not_debuted$first_week)]`**. 

>However, the most recent film to reach Number 1 after appearing on the Top 10 is **`r top_films_reached_1_but_not_debuted$show_title[which.max(top_films_reached_1_but_not_debuted$min_rank_week)]`**.


10. Which TV show/season hit the top 10 in the most countries in its debut week? In how many countries did it chart?

```{r echo=TRUE, results='hide'}
countries_first_week_debut <- COUNTRY_TOP_10 |>
  filter(category %in% "TV") |>
  group_by(show_title) |>
  filter(week == min(week, na.rm = TRUE)) |>
  summarize(num_of_countries = n_distinct(country_name), .groups = "drop") |>
  arrange(desc(num_of_countries))

most_countries_top_show_debut <- countries_first_week_debut |> 
  slice_max(order_by = num_of_countries, n = 1, with_ties = TRUE)

most_countries_top_show_debut
```
> **`r most_countries_top_show_debut$show_title`** hit the top 10 in the most countries in its debut week. It charted in **`r most_countries_top_show_debut$num_of_countries`** countries in its debut week.



# Press Releases

Now that we have explored this data, let's prepare some press releases:

* [Press Release 1: Stranger Things Takes The World By Storm!](@sec-release1)
* [Press Release 2: The Potential Of Commercial Success In India](@sec-release2)
* [Press Release 3: Not Even Latin America Can Escape The Netflix Expansion](@sec-release3)


# Press Release 1: Stranger Things Takes The World By Storm! {#sec-release1 .unnumbered}


```{r echo=TRUE, results='hide'} 
stranger_things_TV_run_country <- COUNTRY_TOP_10 |>
  filter(show_title == "Stranger Things") |> # check if film ) |>
  select(-week, -country_iso2, -category, -weekly_rank, -show_title) |>
  mutate(season_title = if_else(is.na(season_title), "Stranger Things 1", season_title)) |>
  group_by(season_title) |>
  summarize(total_no_countries = n_distinct(country_name))

stranger_things_TV_run_country

stranger_things_season_total_hours_viewed <- GLOBAL_TOP_10 |>
  filter(show_title == "Stranger Things") |>
  select(-week, -runtime, -cumulative_weeks_in_top_10, -weekly_views, -category, -weekly_rank, -show_title) |>
  group_by(season_title) |>
  summarize(season_hours_viewed = sum(weekly_hours_viewed, na.rm = TRUE)) |>
  mutate(season_title = if_else(is.na(season_title), "Stranger Things 1", season_title)) |>
  arrange(season_title)

stranger_things_season_total_hours_viewed
```

Since its debut, Stranger Things has continued to draw in a larger viewership with each subsequent season and in subsequently more countries, with the latest season showing in **`r stranger_things_TV_run_country$total_no_countries[stranger_things_TV_run_country$season_title == "Stranger Things 4"]`** countries. 


```{r echo=TRUE, results='hide'}
stranger_things_season_total_hours_viewed_table <- GLOBAL_TOP_10 |>
  filter(show_title == "Stranger Things") |>
  select(-week, -runtime, -cumulative_weeks_in_top_10, -weekly_views, -category, -weekly_rank, -show_title) |>
  mutate(season_title = if_else(is.na(season_title), "Stranger Things 1", season_title)) |>
  group_by(season_title) |>
  summarize(season_hours_viewed = sum(weekly_hours_viewed, na.rm = TRUE)) |>
  arrange(season_title) |>
  format_titles() |>
  datatable(
    options = list(paging = FALSE, searching = FALSE, info = FALSE, lengthChange = FALSE),
    class = "cell-border stripe hover order-column"
  )

stranger_things_season_total_hours_viewed_table
``` 

We can look closer at each Stranger Things season:
`r stranger_things_season_total_hours_viewed_table` 


```{r echo=TRUE, results='hide'}
top_shows_total_hours_viewed <- GLOBAL_TOP_10 |>
  filter(category %in% c("TV (English)", "TV (Non-English)")) |>
  select(-week, -runtime, -cumulative_weeks_in_top_10, -weekly_views, -category, -weekly_rank) |>
  group_by(show_title) |>
  summarize(show_hours_viewed = sum(weekly_hours_viewed, na.rm = TRUE)) |>
  arrange(desc(show_hours_viewed)) |>
  head(n = 3) |>
  format_titles() |>
  datatable(options = list(paging = FALSE, searching = FALSE, info = FALSE, lengthChange = FALSE),
            class = 'cell-border stripe hover order-column')

top_shows_total_hours_viewed
```

Throughout its four seasons, Stranger Things has achieved a total global viewership of **`r prettyNum(sum(stranger_things_season_total_hours_viewed$season_hours_viewed), big.mark = ",", scientific = FALSE)`** hours ranking it among the top 3 for the most viewership in hours as seen below:
 `r top_shows_total_hours_viewed`:


We can visualize the increasing popularity of each subsequent season most closely represented by an exponential model: 

```{r echo=TRUE}
#| warning: false
stranger_things_season_total_hours_viewed <- GLOBAL_TOP_10 |>
  filter(show_title == "Stranger Things") |>
  select(-week, -runtime, -cumulative_weeks_in_top_10, -weekly_views, -category, -weekly_rank, -show_title) |>
  group_by(season_title) |>
  mutate(season_title = if_else(is.na(season_title), "Stranger Things 1", season_title)) |>
  summarize(season_hours_viewed = sum(weekly_hours_viewed, na.rm = TRUE))

stranger_things <- data.frame(
  season = 1:nrow(stranger_things_season_total_hours_viewed),
  weekly_hours_viewed = stranger_things_season_total_hours_viewed$season_hours_viewed
)

lm_fit <- lm(log(weekly_hours_viewed) ~ season, data = stranger_things)

# Create predicted values for plotting
stranger_things$predicted <- exp(predict(lm_fit))

# Plot
ggplot(stranger_things, aes(x = season, y = weekly_hours_viewed)) +
  geom_point(size = 4, color = "blue") +
  geom_line(aes(y = predicted), color = "red", size = 1) +
  labs(
    title = "Exponential Fit: Season vs Weekly Hours Viewed",
    x = "Season",
    y = "Weekly Hours Viewed"
  ) +
  theme_minimal()
```


And we can even predict how popular Season 5 could be using our exponential model:

```{r echo=TRUE}
#| warning: false
stranger_things_season_total_hours_viewed <- GLOBAL_TOP_10 |>
  filter(show_title == "Stranger Things") |>
  select(-week, -runtime, -cumulative_weeks_in_top_10, -weekly_views, -category, -weekly_rank, -show_title) |>
  group_by(season_title) |>
  mutate(season_title = if_else(is.na(season_title), "Stranger Things 1", season_title)) |>
  summarize(season_hours_viewed = sum(weekly_hours_viewed, na.rm = TRUE))

stranger_things <- data.frame(
  season = 1:nrow(stranger_things_season_total_hours_viewed),
  weekly_hours_viewed = stranger_things_season_total_hours_viewed$season_hours_viewed
)

fit_log <- lm(log(weekly_hours_viewed) ~ season, data = stranger_things)

# Predict season 5 
pred_log <- predict(fit_log, newdata = data.frame(season = 5))
predicted  <- exp(pred_log)

#Smooth curve for fitted line
season_seq <- seq(1, 5, 0.1)
fit_curve <- exp(predict(fit_log, newdata = data.frame(season = season_seq)))
curve_df <- data.frame(season = season_seq, fit = fit_curve)

ggplot(stranger_things, aes(x = season, y = weekly_hours_viewed)) +
  geom_point(size = 3, color = "red") +
  geom_line(data = curve_df, aes(x = season, y = fit),
            color = "blue", linewidth = 1) +
  geom_point(aes(x = 5, y = predicted), 
             color = "darkgreen", size = 4) +
  geom_text(aes(x = 5, y = predicted, 
                label = paste0("Season 5\n", format(round(predicted/1e6,1), nsmall=1), "M hrs")),
            vjust = -1, color = "darkgreen") +
  labs(title = "Exponential Fit: Stranger Things Viewership",
       x = "Season",
       y = "Weekly Hours Viewed") +
  theme_minimal()

```

We can predict Stranger Things Season 5 (with a potential viewership of **`r prettyNum(predicted, big.mark = ",", scientific = FALSE)`** hours to be viewed) to be a hit at least as much as Season 4! 

```{r echo=TRUE, results='hide'}
stranger_things_seasonal_max_num_weeks_top_10 <- GLOBAL_TOP_10 |>
  filter(show_title == "Stranger Things") |>
  select(-week, -runtime, -weekly_views, -weekly_hours_viewed, -category, -weekly_rank, -show_title) |>
  group_by(season_title) |>
  summarize(season_max_num_weeks_top_10 = max(cumulative_weeks_in_top_10)) |>
  mutate(season_title = if_else(is.na(season_title), "Stranger Things 1", season_title))

stranger_things_seasonal_max_num_weeks_top_10 

English_tv <- GLOBAL_TOP_10 |>
  filter(category == "TV (English)") |>
  group_by(show_title) |>
  summarize(cumulative_weeks_in_top_10 = max(cumulative_weeks_in_top_10, na.rm=TRUE)) |>
  ungroup() |>
  slice_max(cumulative_weeks_in_top_10, n=5) |>
  arrange(desc(cumulative_weeks_in_top_10)) |>
  select(show_title, cumulative_weeks_in_top_10) |>
  format_titles() |>
  datatable(options = list(paging = FALSE, searching = FALSE, info = FALSE, lengthChange = FALSE),
            class = 'cell-border stripe hover order-column')

English_tv
```

Similarly, since each season has maintained at least 10 consecutive weeks in the World's Top 10 with Season 4 at **`r stranger_things_seasonal_max_num_weeks_top_10$season_max_num_weeks_top_10[stranger_things_seasonal_max_num_weeks_top_10$season_title == "Stranger Things 4"]`** weeks, Stranger Things has given the top TV shows in the world a run for their money!
`r English_tv`

We expect Season 5 to exceed its current record number of weeks in the top 10. 



# Press Release 2: The Potential of Commercial Success in India {#sec-release2 .unnumbered}


As the most populated country in the world, India represents a major growth opportunity for Netflix. 
Prepare a press release highlighting Netflix’s recent successes in Hindi-language films and TV. 
If you assume that all Hindi-language viewing is from customers in India (a strong assumption!), you can use this viewership data to estimate the size of Netflix’s customer base in India: compute a few points and discuss the long term growth trends (if any).


```{r, eval=FALSE}

install.packages(c("httr", "jsonlite"))
install.packages("lubridate")
library(lubridate)
library(httr)
library(jsonlite)
library(readr)
library(dplyr)
library(DT)


api_key <- "IC5lKfjwmzfJOkEAbcERIMGcm2BqAGKMtA13F8LD"
base_url <- "https://api.watchmode.com/v1/list-titles/"

res <- GET(
  url = "https://api.watchmode.com/v1/list-titles/",
  query = list(
    apiKey     = api_key,
    source_ids = "203",  # Netflix
    titleTypes = "movie,tv_series,tv_movie,tv_special,tv_miniseries,short_film",
    languages  = "hi",
    regions    = "IN",
    limit      = "250",   # start small
    page       = "1"
  )
)

status_code(res)  # should return 200 if request is valid
data <- fromJSON(content(res, as = "text", encoding = "UTF-8"))
titles <- data$titles$title

cat("Found", length(titles), "Hindi Netflix movies:\n")
titles_df <- data.frame(title = titles)
write_csv(titles_df, "all_titles.csv")
```


To capture Netflix's recent success in Hindi-language films and TV, we first scraped the top 300 titles from Watchmode API. 

```{r echo=TRUE, results='hide'}
all_titles <- read.csv("~/Desktop/Baruch College/STAT 9750 FALL 2025/STA9750-2025-FALL/data/mp01/all_titles.csv")

first_twenty_titles <- all_titles |>
  head(n = 10) |>
  format_titles() |>
  datatable(options = list(paging = FALSE, searching = FALSE, info = FALSE, lengthChange = FALSE),
            class = 'cell-border stripe hover order-column')

first_twenty_titles
```

We can observe 20 such titles below: `r first_twenty_titles`


```{r echo=TRUE, results='hide'}
world_wide_indian_films_tv <- GLOBAL_TOP_10 |>
  filter(show_title %in% all_titles$title)

total_weekly_hours_viewed_India_Netflix <- world_wide_indian_films_tv |> 
  summarize(total_weekly_hours_viewed = sum(weekly_hours_viewed))

total_weekly_hours_viewed_India_Netflix

total_weekly_hours_by_year <- world_wide_indian_films_tv |> 
  mutate(yr = year(week)) |>
  group_by(yr) |>
  summarize(yearly_total_weekly_hours = sum(weekly_hours_viewed)) |>
  arrange(yr) |>
  format_titles() |>
  datatable(options = list(paging = FALSE, searching = FALSE, info = FALSE, lengthChange = FALSE),
            class = 'cell-border stripe hover order-column')

total_weekly_hours_by_year

total_weekly_views_India_Netflix <- world_wide_indian_films_tv |> 
  summarize(total_weekly_views = sum(weekly_views, na.rm=TRUE))

total_weekly_views_India_Netflix 

total_weekly_views_by_year <- world_wide_indian_films_tv |> 
  mutate(yr = year(week)) |>
  group_by(yr) |>
  summarize(yearly_total_weekly_views = sum(weekly_views, na.rm=TRUE)) |>
  arrange(yr) |>
  format_titles() |>
  datatable(options = list(paging = FALSE, searching = FALSE, info = FALSE, lengthChange = FALSE),
            class = 'cell-border stripe hover order-column')

total_weekly_views_by_year


total_weekly_hours_year <- world_wide_indian_films_tv |> 
  mutate(yr = year(week)) |>
  group_by(yr) |>
  summarize(yearly_total_weekly_hours = sum(weekly_hours_viewed)) |>
  arrange(yr)

percent_increase = 100 * (total_weekly_hours_year$yearly_total_weekly_hours[total_weekly_hours_year$yr == 2024] - total_weekly_hours_year$yearly_total_weekly_hours[total_weekly_hours_year$yr == 2021])/total_weekly_hours_year$yearly_total_weekly_hours[total_weekly_hours_year$yr == 2021]

percent_increase

percent_decrease = 100 * (total_weekly_hours_year$yearly_total_weekly_hours[total_weekly_hours_year$yr == 2025] - total_weekly_hours_year$yearly_total_weekly_hours[total_weekly_hours_year$yr == 2024])/total_weekly_hours_year$yearly_total_weekly_hours[total_weekly_hours_year$yr == 2024]
percent_decrease 
```

If we assume that all Hindi-language viewing is from customers in India as suggested by Professor Weylandt, we can see that Hindi-language films have achieved a total weekly viewership of  **`r prettyNum(total_weekly_hours_viewed_India_Netflix, big.mark = ",", scientific = FALSE)`** hours. Incredible! We can observe the percent growth in yearly hours of viewership from 2021 to 2024 as **`r prettyNum(percent_increase, big.mark = ",", scientific = FALSE)`%** followed by a shrink in growth by **`r prettyNum(percent_decrease, big.mark = ",", scientific = FALSE)`%** in 2025. `r total_weekly_hours_by_year`

Moreover, we can estimate the total weekly views in India (assuming that all Hindi-language viewing is from customers in India) as **`r prettyNum(total_weekly_views_India_Netflix, big.mark = ",", scientific = FALSE)`** total views from 2021 to 2025. And we can observe the yearly growth in yearly weekly views throughout the years, although weekly views for 2021 and 2022 were likely not recorded initially. `r total_weekly_views_by_year`

```{r echo=TRUE, results='hide'}
#| warning: false
top_film_india_by_year <- world_wide_indian_films_tv |> 
  mutate(yr = year(week)) |>
  group_by(yr, show_title) |>
  summarize(top_indian_film = max(cumulative_weeks_in_top_10)) |>
  slice_max(order_by=top_indian_film, n=1, with_ties=TRUE) |>
  arrange(yr) |>
  format_titles() |>
  datatable(options = list(paging = FALSE, searching = FALSE, info = FALSE, lengthChange = FALSE),
            class = 'cell-border stripe hover order-column')

top_film_india_by_year
```

Finally, to finish our analysis, here are the top films each year from 2023 to 2025 in India. If you have not watched any of these top films, here are the top recommendations for your next trip in India! `r top_film_india_by_year`.



# Press Release 3: Not Even Latin America Can Escape The Netflix Expansion {#sec-release3 .unnumbered}

```{r echo=TRUE, results='hide'}
latin_america_countries <- c(
  "Argentina",
  "Bolivia",
  "Brazil",
  "Chile",
  "Colombia",
  "Costa Rica",
  "Cuba",
  "Dominican Republic",
  "Ecuador",
  "El Salvador",
  "Guatemala",
  "Honduras",
  "Mexico",
  "Nicaragua",
  "Panama",
  "Paraguay",
  "Peru",
  "Uruguay",
  "Venezuela",
  "Haiti"
)

num_countries <- length(latin_america_countries)

latin_american_country_media <- COUNTRY_TOP_10 |>
  filter(country_name %in% latin_america_countries)

top_films_per_country_table <- latin_american_country_media |>
  group_by(country_name) |>
  filter(cumulative_weeks_in_top_10 == max(cumulative_weeks_in_top_10, na.rm = TRUE)) |>
  slice_max(order_by = cumulative_weeks_in_top_10, n = 1, with_ties = FALSE) |>
  select(country_name, show_title, cumulative_weeks_in_top_10) |>
  format_titles() |>
  datatable(options = list(paging = FALSE, searching = FALSE, info = FALSE, lengthChange = FALSE),
            class = 'cell-border stripe hover order-column')

top_films_per_country <- latin_american_country_media |>
  group_by(country_name) |>
  filter(cumulative_weeks_in_top_10 == max(cumulative_weeks_in_top_10, na.rm = TRUE)) |>
  slice_max(order_by = cumulative_weeks_in_top_10, n = 1, with_ties = FALSE) |>
  select(country_name, show_title, cumulative_weeks_in_top_10) 

top_films_in_latin_america <- GLOBAL_TOP_10 |>
  filter(show_title %in% unique(top_films_per_country$show_title)) |>
  group_by(show_title) |>
  summarize(total_weekly_hours_viewed = sum(weekly_hours_viewed, na.rm = TRUE)) |>
  arrange(desc(total_weekly_hours_viewed))

total_weekly_viewership_in_latin_america <- sum(top_films_in_latin_america$total_weekly_hours_viewed)
```

Netflix is ever expanding throughout Latin America from Mexico and Guatemala down to Brazil and Argentina. We can initially observe the top shows with their cumulative weeks in the top 10 in each country.  `r top_films_per_country_table`

We can notice that Netflix has geared its industry in Latin America to present local hits to capture greater viewership and attention as observed by the recurring Spanish top films in these **`r prettyNum(num_countries, big.mark = ",", scientific = FALSE)`** countries. If we assume that all the top film for these countries viewings are from customers in Latin America, we can see that these top films in Latin America have achieved a total weekly viewership of **`r prettyNum(total_weekly_viewership_in_latin_america, big.mark = ",", scientific = FALSE)`** hours! 


```{r echo=TRUE, results='hide'}
netflix_originals <- c(
  "Club de Cuervos",
  "La Casa de las Flores",
  "3%",
  "Sintonia",
  "O Mecanismo",
  "Narcos",
  "Diablero",
  "Distrito Salvaje",
  "Roma",
  "One Hundred Years of Solitude",
  "El Eternauta"
)

originals <- tibble(Netflix_Originals = netflix_originals) |>
  datatable(options = list(paging = FALSE, searching = FALSE, info = FALSE, lengthChange = FALSE),
            class = 'cell-border stripe hover order-column')

originals 

```


Netflix has even developed its own films to attract greater viewership in Latin America and expand its base in Latin America: `r originals`

There is great potential to capture the millions of views looking for a great show in Latin America! Thus, Netflix should continue to develop Spanish-speaking shows to attain the loyal viewership of Latin America. 

```{r}
latin_american_country_Netflix_originals <- latin_american_country_media |>
  filter(show_title %in% netflix_originals) |>
  group_by(country_name) |>
  slice_min(weekly_rank) |>
  select(country_name, weekly_rank, show_title) |>
  format_titles() |>
  datatable(options = list(paging = FALSE, searching = FALSE, info = FALSE, lengthChange = FALSE),
            class = 'cell-border stripe hover order-column')

latin_american_country_Netflix_originals
```



